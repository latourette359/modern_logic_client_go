/*
Modern Logic Api

Manage and version your customer decision logic outside of your codebase

API version: 1.0.0
Contact: info@usemodernlogic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modern_logic_client

import (
	"encoding/json"
)

// Customer struct for Customer
type Customer struct {
	ExtraProperties *map[string]interface{} `json:"extraProperties,omitempty"`
	// Way that you uniquely identify customers
	CustomerId *string `json:"customerId,omitempty"`
	// Legal first name of the user being evaluated.
	FirstName *string `json:"firstName,omitempty"`
	// Legal last name (surname) of the user being evaluated.
	LastName *string `json:"lastName,omitempty"`
	// Email address provided by user being evaluated.
	Email *string `json:"email,omitempty"`
	// Phone number of user being evaluated.
	Phone *string `json:"phone,omitempty"`
	// Home address of user being evaluated
	AddressStreet *string `json:"addressStreet,omitempty"`
	AddressStreet2 *string `json:"addressStreet2,omitempty"`
	AddressCity *string `json:"addressCity,omitempty"`
	AddressStateCode *string `json:"addressStateCode,omitempty"`
	AddressZip *string `json:"addressZip,omitempty"`
	AddressCountryCode *string `json:"addressCountryCode,omitempty"`
	// Date of birth for user being evaluated
	Dob *string `json:"dob,omitempty"`
}

// NewCustomer instantiates a new Customer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomer() *Customer {
	this := Customer{}
	return &this
}

// NewCustomerWithDefaults instantiates a new Customer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerWithDefaults() *Customer {
	this := Customer{}
	return &this
}

// GetExtraProperties returns the ExtraProperties field value if set, zero value otherwise.
func (o *Customer) GetExtraProperties() map[string]interface{} {
	if o == nil || o.ExtraProperties == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.ExtraProperties
}

// GetExtraPropertiesOk returns a tuple with the ExtraProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetExtraPropertiesOk() (*map[string]interface{}, bool) {
	if o == nil || o.ExtraProperties == nil {
		return nil, false
	}
	return o.ExtraProperties, true
}

// HasExtraProperties returns a boolean if a field has been set.
func (o *Customer) HasExtraProperties() bool {
	if o != nil && o.ExtraProperties != nil {
		return true
	}

	return false
}

// SetExtraProperties gets a reference to the given map[string]interface{} and assigns it to the ExtraProperties field.
func (o *Customer) SetExtraProperties(v map[string]interface{}) {
	o.ExtraProperties = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *Customer) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetCustomerIdOk() (*string, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *Customer) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *Customer) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *Customer) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *Customer) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *Customer) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *Customer) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *Customer) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *Customer) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Customer) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Customer) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Customer) SetEmail(v string) {
	o.Email = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *Customer) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *Customer) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *Customer) SetPhone(v string) {
	o.Phone = &v
}

// GetAddressStreet returns the AddressStreet field value if set, zero value otherwise.
func (o *Customer) GetAddressStreet() string {
	if o == nil || o.AddressStreet == nil {
		var ret string
		return ret
	}
	return *o.AddressStreet
}

// GetAddressStreetOk returns a tuple with the AddressStreet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetAddressStreetOk() (*string, bool) {
	if o == nil || o.AddressStreet == nil {
		return nil, false
	}
	return o.AddressStreet, true
}

// HasAddressStreet returns a boolean if a field has been set.
func (o *Customer) HasAddressStreet() bool {
	if o != nil && o.AddressStreet != nil {
		return true
	}

	return false
}

// SetAddressStreet gets a reference to the given string and assigns it to the AddressStreet field.
func (o *Customer) SetAddressStreet(v string) {
	o.AddressStreet = &v
}

// GetAddressStreet2 returns the AddressStreet2 field value if set, zero value otherwise.
func (o *Customer) GetAddressStreet2() string {
	if o == nil || o.AddressStreet2 == nil {
		var ret string
		return ret
	}
	return *o.AddressStreet2
}

// GetAddressStreet2Ok returns a tuple with the AddressStreet2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetAddressStreet2Ok() (*string, bool) {
	if o == nil || o.AddressStreet2 == nil {
		return nil, false
	}
	return o.AddressStreet2, true
}

// HasAddressStreet2 returns a boolean if a field has been set.
func (o *Customer) HasAddressStreet2() bool {
	if o != nil && o.AddressStreet2 != nil {
		return true
	}

	return false
}

// SetAddressStreet2 gets a reference to the given string and assigns it to the AddressStreet2 field.
func (o *Customer) SetAddressStreet2(v string) {
	o.AddressStreet2 = &v
}

// GetAddressCity returns the AddressCity field value if set, zero value otherwise.
func (o *Customer) GetAddressCity() string {
	if o == nil || o.AddressCity == nil {
		var ret string
		return ret
	}
	return *o.AddressCity
}

// GetAddressCityOk returns a tuple with the AddressCity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetAddressCityOk() (*string, bool) {
	if o == nil || o.AddressCity == nil {
		return nil, false
	}
	return o.AddressCity, true
}

// HasAddressCity returns a boolean if a field has been set.
func (o *Customer) HasAddressCity() bool {
	if o != nil && o.AddressCity != nil {
		return true
	}

	return false
}

// SetAddressCity gets a reference to the given string and assigns it to the AddressCity field.
func (o *Customer) SetAddressCity(v string) {
	o.AddressCity = &v
}

// GetAddressStateCode returns the AddressStateCode field value if set, zero value otherwise.
func (o *Customer) GetAddressStateCode() string {
	if o == nil || o.AddressStateCode == nil {
		var ret string
		return ret
	}
	return *o.AddressStateCode
}

// GetAddressStateCodeOk returns a tuple with the AddressStateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetAddressStateCodeOk() (*string, bool) {
	if o == nil || o.AddressStateCode == nil {
		return nil, false
	}
	return o.AddressStateCode, true
}

// HasAddressStateCode returns a boolean if a field has been set.
func (o *Customer) HasAddressStateCode() bool {
	if o != nil && o.AddressStateCode != nil {
		return true
	}

	return false
}

// SetAddressStateCode gets a reference to the given string and assigns it to the AddressStateCode field.
func (o *Customer) SetAddressStateCode(v string) {
	o.AddressStateCode = &v
}

// GetAddressZip returns the AddressZip field value if set, zero value otherwise.
func (o *Customer) GetAddressZip() string {
	if o == nil || o.AddressZip == nil {
		var ret string
		return ret
	}
	return *o.AddressZip
}

// GetAddressZipOk returns a tuple with the AddressZip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetAddressZipOk() (*string, bool) {
	if o == nil || o.AddressZip == nil {
		return nil, false
	}
	return o.AddressZip, true
}

// HasAddressZip returns a boolean if a field has been set.
func (o *Customer) HasAddressZip() bool {
	if o != nil && o.AddressZip != nil {
		return true
	}

	return false
}

// SetAddressZip gets a reference to the given string and assigns it to the AddressZip field.
func (o *Customer) SetAddressZip(v string) {
	o.AddressZip = &v
}

// GetAddressCountryCode returns the AddressCountryCode field value if set, zero value otherwise.
func (o *Customer) GetAddressCountryCode() string {
	if o == nil || o.AddressCountryCode == nil {
		var ret string
		return ret
	}
	return *o.AddressCountryCode
}

// GetAddressCountryCodeOk returns a tuple with the AddressCountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetAddressCountryCodeOk() (*string, bool) {
	if o == nil || o.AddressCountryCode == nil {
		return nil, false
	}
	return o.AddressCountryCode, true
}

// HasAddressCountryCode returns a boolean if a field has been set.
func (o *Customer) HasAddressCountryCode() bool {
	if o != nil && o.AddressCountryCode != nil {
		return true
	}

	return false
}

// SetAddressCountryCode gets a reference to the given string and assigns it to the AddressCountryCode field.
func (o *Customer) SetAddressCountryCode(v string) {
	o.AddressCountryCode = &v
}

// GetDob returns the Dob field value if set, zero value otherwise.
func (o *Customer) GetDob() string {
	if o == nil || o.Dob == nil {
		var ret string
		return ret
	}
	return *o.Dob
}

// GetDobOk returns a tuple with the Dob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetDobOk() (*string, bool) {
	if o == nil || o.Dob == nil {
		return nil, false
	}
	return o.Dob, true
}

// HasDob returns a boolean if a field has been set.
func (o *Customer) HasDob() bool {
	if o != nil && o.Dob != nil {
		return true
	}

	return false
}

// SetDob gets a reference to the given string and assigns it to the Dob field.
func (o *Customer) SetDob(v string) {
	o.Dob = &v
}

func (o Customer) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExtraProperties != nil {
		toSerialize["extraProperties"] = o.ExtraProperties
	}
	if o.CustomerId != nil {
		toSerialize["customerId"] = o.CustomerId
	}
	if o.FirstName != nil {
		toSerialize["firstName"] = o.FirstName
	}
	if o.LastName != nil {
		toSerialize["lastName"] = o.LastName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.AddressStreet != nil {
		toSerialize["addressStreet"] = o.AddressStreet
	}
	if o.AddressStreet2 != nil {
		toSerialize["addressStreet2"] = o.AddressStreet2
	}
	if o.AddressCity != nil {
		toSerialize["addressCity"] = o.AddressCity
	}
	if o.AddressStateCode != nil {
		toSerialize["addressStateCode"] = o.AddressStateCode
	}
	if o.AddressZip != nil {
		toSerialize["addressZip"] = o.AddressZip
	}
	if o.AddressCountryCode != nil {
		toSerialize["addressCountryCode"] = o.AddressCountryCode
	}
	if o.Dob != nil {
		toSerialize["dob"] = o.Dob
	}
	return json.Marshal(toSerialize)
}

type NullableCustomer struct {
	value *Customer
	isSet bool
}

func (v NullableCustomer) Get() *Customer {
	return v.value
}

func (v *NullableCustomer) Set(val *Customer) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomer(val *Customer) *NullableCustomer {
	return &NullableCustomer{value: val, isSet: true}
}

func (v NullableCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


