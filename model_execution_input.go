/*
Modern Logic Api

Manage and version your customer decision logic outside of your codebase

API version: 1.0.0
Contact: info@usemodernlogic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modern_logic_client

import (
	"encoding/json"
)

// ExecutionInput A json blob you send to your workflow to execute on
type ExecutionInput struct {
	// Ties execution result to a specific customer
	CustomerId *string `json:"customerId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExecutionInput ExecutionInput

// NewExecutionInput instantiates a new ExecutionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionInput() *ExecutionInput {
	this := ExecutionInput{}
	return &this
}

// NewExecutionInputWithDefaults instantiates a new ExecutionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionInputWithDefaults() *ExecutionInput {
	this := ExecutionInput{}
	return &this
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *ExecutionInput) GetCustomerId() string {
	if o == nil || o.CustomerId == nil {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionInput) GetCustomerIdOk() (*string, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *ExecutionInput) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *ExecutionInput) SetCustomerId(v string) {
	o.CustomerId = &v
}

func (o ExecutionInput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomerId != nil {
		toSerialize["customerId"] = o.CustomerId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *ExecutionInput) UnmarshalJSON(bytes []byte) (err error) {
	varExecutionInput := _ExecutionInput{}

	if err = json.Unmarshal(bytes, &varExecutionInput); err == nil {
		*o = ExecutionInput(varExecutionInput)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "customerId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExecutionInput struct {
	value *ExecutionInput
	isSet bool
}

func (v NullableExecutionInput) Get() *ExecutionInput {
	return v.value
}

func (v *NullableExecutionInput) Set(val *ExecutionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionInput(val *ExecutionInput) *NullableExecutionInput {
	return &NullableExecutionInput{value: val, isSet: true}
}

func (v NullableExecutionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


