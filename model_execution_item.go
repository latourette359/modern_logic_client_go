/*
Modern Logic Api

Manage and version your customer decision logic outside of your codebase

API version: 1.0.0
Contact: info@usemodernlogic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modern_logic_client

import (
	"encoding/json"
	"time"
)

// ExecutionItem struct for ExecutionItem
type ExecutionItem struct {
	Id *int32 `json:"id,omitempty"`
	// When the execution happened
	DateTimeExecuted *time.Time `json:"dateTimeExecuted,omitempty"`
	WorkflowId *int32 `json:"workflowId,omitempty"`
}

// NewExecutionItem instantiates a new ExecutionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecutionItem() *ExecutionItem {
	this := ExecutionItem{}
	return &this
}

// NewExecutionItemWithDefaults instantiates a new ExecutionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecutionItemWithDefaults() *ExecutionItem {
	this := ExecutionItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ExecutionItem) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionItem) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ExecutionItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ExecutionItem) SetId(v int32) {
	o.Id = &v
}

// GetDateTimeExecuted returns the DateTimeExecuted field value if set, zero value otherwise.
func (o *ExecutionItem) GetDateTimeExecuted() time.Time {
	if o == nil || o.DateTimeExecuted == nil {
		var ret time.Time
		return ret
	}
	return *o.DateTimeExecuted
}

// GetDateTimeExecutedOk returns a tuple with the DateTimeExecuted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionItem) GetDateTimeExecutedOk() (*time.Time, bool) {
	if o == nil || o.DateTimeExecuted == nil {
		return nil, false
	}
	return o.DateTimeExecuted, true
}

// HasDateTimeExecuted returns a boolean if a field has been set.
func (o *ExecutionItem) HasDateTimeExecuted() bool {
	if o != nil && o.DateTimeExecuted != nil {
		return true
	}

	return false
}

// SetDateTimeExecuted gets a reference to the given time.Time and assigns it to the DateTimeExecuted field.
func (o *ExecutionItem) SetDateTimeExecuted(v time.Time) {
	o.DateTimeExecuted = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *ExecutionItem) GetWorkflowId() int32 {
	if o == nil || o.WorkflowId == nil {
		var ret int32
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecutionItem) GetWorkflowIdOk() (*int32, bool) {
	if o == nil || o.WorkflowId == nil {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *ExecutionItem) HasWorkflowId() bool {
	if o != nil && o.WorkflowId != nil {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given int32 and assigns it to the WorkflowId field.
func (o *ExecutionItem) SetWorkflowId(v int32) {
	o.WorkflowId = &v
}

func (o ExecutionItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DateTimeExecuted != nil {
		toSerialize["dateTimeExecuted"] = o.DateTimeExecuted
	}
	if o.WorkflowId != nil {
		toSerialize["workflowId"] = o.WorkflowId
	}
	return json.Marshal(toSerialize)
}

type NullableExecutionItem struct {
	value *ExecutionItem
	isSet bool
}

func (v NullableExecutionItem) Get() *ExecutionItem {
	return v.value
}

func (v *NullableExecutionItem) Set(val *ExecutionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableExecutionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableExecutionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecutionItem(val *ExecutionItem) *NullableExecutionItem {
	return &NullableExecutionItem{value: val, isSet: true}
}

func (v NullableExecutionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecutionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


