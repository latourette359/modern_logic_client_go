/*
Modern Logic Api

Manage and version your customer decision logic outside of your codebase

API version: 1.0.0
Contact: info@usemodernlogic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modern_logic_client

import (
	"encoding/json"
)

// CustomerItem struct for CustomerItem
type CustomerItem struct {
	Id *int32 `json:"id,omitempty"`
	ExternalId *string `json:"externalId,omitempty"`
}

// NewCustomerItem instantiates a new CustomerItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerItem() *CustomerItem {
	this := CustomerItem{}
	return &this
}

// NewCustomerItemWithDefaults instantiates a new CustomerItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerItemWithDefaults() *CustomerItem {
	this := CustomerItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CustomerItem) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerItem) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CustomerItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CustomerItem) SetId(v int32) {
	o.Id = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *CustomerItem) GetExternalId() string {
	if o == nil || o.ExternalId == nil {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CustomerItem) GetExternalIdOk() (*string, bool) {
	if o == nil || o.ExternalId == nil {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *CustomerItem) HasExternalId() bool {
	if o != nil && o.ExternalId != nil {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *CustomerItem) SetExternalId(v string) {
	o.ExternalId = &v
}

func (o CustomerItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ExternalId != nil {
		toSerialize["externalId"] = o.ExternalId
	}
	return json.Marshal(toSerialize)
}

type NullableCustomerItem struct {
	value *CustomerItem
	isSet bool
}

func (v NullableCustomerItem) Get() *CustomerItem {
	return v.value
}

func (v *NullableCustomerItem) Set(val *CustomerItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerItem(val *CustomerItem) *NullableCustomerItem {
	return &NullableCustomerItem{value: val, isSet: true}
}

func (v NullableCustomerItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


