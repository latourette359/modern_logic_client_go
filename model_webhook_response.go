/*
Modern Logic Api

Manage and version your customer decision logic outside of your codebase

API version: 1.0.0
Contact: info@usemodernlogic.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package modern_logic_client

import (
	"encoding/json"
)

// WebhookResponse What we will send to your webhook via a post request
type WebhookResponse struct {
	WebhookId *int32 `json:"webhookId,omitempty"`
	WorkflowId *int32 `json:"workflowId,omitempty"`
	WorkflowVersion *int32 `json:"workflowVersion,omitempty"`
	ExecutionId *int32 `json:"executionId,omitempty"`
	CustomerId *int32 `json:"customerId,omitempty"`
	CustomerUrl *string `json:"customerUrl,omitempty"`
	AlertId *int32 `json:"alertId,omitempty"`
	Description *string `json:"description,omitempty"`
	Event *string `json:"event,omitempty"`
	EventMetadata *map[string]interface{} `json:"event_metadata,omitempty"`
}

// NewWebhookResponse instantiates a new WebhookResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookResponse() *WebhookResponse {
	this := WebhookResponse{}
	return &this
}

// NewWebhookResponseWithDefaults instantiates a new WebhookResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookResponseWithDefaults() *WebhookResponse {
	this := WebhookResponse{}
	return &this
}

// GetWebhookId returns the WebhookId field value if set, zero value otherwise.
func (o *WebhookResponse) GetWebhookId() int32 {
	if o == nil || o.WebhookId == nil {
		var ret int32
		return ret
	}
	return *o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetWebhookIdOk() (*int32, bool) {
	if o == nil || o.WebhookId == nil {
		return nil, false
	}
	return o.WebhookId, true
}

// HasWebhookId returns a boolean if a field has been set.
func (o *WebhookResponse) HasWebhookId() bool {
	if o != nil && o.WebhookId != nil {
		return true
	}

	return false
}

// SetWebhookId gets a reference to the given int32 and assigns it to the WebhookId field.
func (o *WebhookResponse) SetWebhookId(v int32) {
	o.WebhookId = &v
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise.
func (o *WebhookResponse) GetWorkflowId() int32 {
	if o == nil || o.WorkflowId == nil {
		var ret int32
		return ret
	}
	return *o.WorkflowId
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetWorkflowIdOk() (*int32, bool) {
	if o == nil || o.WorkflowId == nil {
		return nil, false
	}
	return o.WorkflowId, true
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *WebhookResponse) HasWorkflowId() bool {
	if o != nil && o.WorkflowId != nil {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given int32 and assigns it to the WorkflowId field.
func (o *WebhookResponse) SetWorkflowId(v int32) {
	o.WorkflowId = &v
}

// GetWorkflowVersion returns the WorkflowVersion field value if set, zero value otherwise.
func (o *WebhookResponse) GetWorkflowVersion() int32 {
	if o == nil || o.WorkflowVersion == nil {
		var ret int32
		return ret
	}
	return *o.WorkflowVersion
}

// GetWorkflowVersionOk returns a tuple with the WorkflowVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetWorkflowVersionOk() (*int32, bool) {
	if o == nil || o.WorkflowVersion == nil {
		return nil, false
	}
	return o.WorkflowVersion, true
}

// HasWorkflowVersion returns a boolean if a field has been set.
func (o *WebhookResponse) HasWorkflowVersion() bool {
	if o != nil && o.WorkflowVersion != nil {
		return true
	}

	return false
}

// SetWorkflowVersion gets a reference to the given int32 and assigns it to the WorkflowVersion field.
func (o *WebhookResponse) SetWorkflowVersion(v int32) {
	o.WorkflowVersion = &v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *WebhookResponse) GetExecutionId() int32 {
	if o == nil || o.ExecutionId == nil {
		var ret int32
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetExecutionIdOk() (*int32, bool) {
	if o == nil || o.ExecutionId == nil {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *WebhookResponse) HasExecutionId() bool {
	if o != nil && o.ExecutionId != nil {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given int32 and assigns it to the ExecutionId field.
func (o *WebhookResponse) SetExecutionId(v int32) {
	o.ExecutionId = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *WebhookResponse) GetCustomerId() int32 {
	if o == nil || o.CustomerId == nil {
		var ret int32
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetCustomerIdOk() (*int32, bool) {
	if o == nil || o.CustomerId == nil {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *WebhookResponse) HasCustomerId() bool {
	if o != nil && o.CustomerId != nil {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given int32 and assigns it to the CustomerId field.
func (o *WebhookResponse) SetCustomerId(v int32) {
	o.CustomerId = &v
}

// GetCustomerUrl returns the CustomerUrl field value if set, zero value otherwise.
func (o *WebhookResponse) GetCustomerUrl() string {
	if o == nil || o.CustomerUrl == nil {
		var ret string
		return ret
	}
	return *o.CustomerUrl
}

// GetCustomerUrlOk returns a tuple with the CustomerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetCustomerUrlOk() (*string, bool) {
	if o == nil || o.CustomerUrl == nil {
		return nil, false
	}
	return o.CustomerUrl, true
}

// HasCustomerUrl returns a boolean if a field has been set.
func (o *WebhookResponse) HasCustomerUrl() bool {
	if o != nil && o.CustomerUrl != nil {
		return true
	}

	return false
}

// SetCustomerUrl gets a reference to the given string and assigns it to the CustomerUrl field.
func (o *WebhookResponse) SetCustomerUrl(v string) {
	o.CustomerUrl = &v
}

// GetAlertId returns the AlertId field value if set, zero value otherwise.
func (o *WebhookResponse) GetAlertId() int32 {
	if o == nil || o.AlertId == nil {
		var ret int32
		return ret
	}
	return *o.AlertId
}

// GetAlertIdOk returns a tuple with the AlertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetAlertIdOk() (*int32, bool) {
	if o == nil || o.AlertId == nil {
		return nil, false
	}
	return o.AlertId, true
}

// HasAlertId returns a boolean if a field has been set.
func (o *WebhookResponse) HasAlertId() bool {
	if o != nil && o.AlertId != nil {
		return true
	}

	return false
}

// SetAlertId gets a reference to the given int32 and assigns it to the AlertId field.
func (o *WebhookResponse) SetAlertId(v int32) {
	o.AlertId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WebhookResponse) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WebhookResponse) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WebhookResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *WebhookResponse) GetEvent() string {
	if o == nil || o.Event == nil {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetEventOk() (*string, bool) {
	if o == nil || o.Event == nil {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *WebhookResponse) HasEvent() bool {
	if o != nil && o.Event != nil {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *WebhookResponse) SetEvent(v string) {
	o.Event = &v
}

// GetEventMetadata returns the EventMetadata field value if set, zero value otherwise.
func (o *WebhookResponse) GetEventMetadata() map[string]interface{} {
	if o == nil || o.EventMetadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.EventMetadata
}

// GetEventMetadataOk returns a tuple with the EventMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookResponse) GetEventMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || o.EventMetadata == nil {
		return nil, false
	}
	return o.EventMetadata, true
}

// HasEventMetadata returns a boolean if a field has been set.
func (o *WebhookResponse) HasEventMetadata() bool {
	if o != nil && o.EventMetadata != nil {
		return true
	}

	return false
}

// SetEventMetadata gets a reference to the given map[string]interface{} and assigns it to the EventMetadata field.
func (o *WebhookResponse) SetEventMetadata(v map[string]interface{}) {
	o.EventMetadata = &v
}

func (o WebhookResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WebhookId != nil {
		toSerialize["webhookId"] = o.WebhookId
	}
	if o.WorkflowId != nil {
		toSerialize["workflowId"] = o.WorkflowId
	}
	if o.WorkflowVersion != nil {
		toSerialize["workflowVersion"] = o.WorkflowVersion
	}
	if o.ExecutionId != nil {
		toSerialize["executionId"] = o.ExecutionId
	}
	if o.CustomerId != nil {
		toSerialize["customerId"] = o.CustomerId
	}
	if o.CustomerUrl != nil {
		toSerialize["customerUrl"] = o.CustomerUrl
	}
	if o.AlertId != nil {
		toSerialize["alertId"] = o.AlertId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Event != nil {
		toSerialize["event"] = o.Event
	}
	if o.EventMetadata != nil {
		toSerialize["event_metadata"] = o.EventMetadata
	}
	return json.Marshal(toSerialize)
}

type NullableWebhookResponse struct {
	value *WebhookResponse
	isSet bool
}

func (v NullableWebhookResponse) Get() *WebhookResponse {
	return v.value
}

func (v *NullableWebhookResponse) Set(val *WebhookResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookResponse(val *WebhookResponse) *NullableWebhookResponse {
	return &NullableWebhookResponse{value: val, isSet: true}
}

func (v NullableWebhookResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


